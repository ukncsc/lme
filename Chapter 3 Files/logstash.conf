##########################
# LME Logstash Config    #
# Version 0.3 - 06/07/2020 #
##########################

input {
  beats {
    port => 5044
    ssl => true
    ssl_certificate => "/run/secrets/logstash.crt"
    ssl_key => "/run/secrets/logstash.key"
    ssl_certificate_authorities => ["/run/secrets/ca.crt"]
    ssl_verify_mode => "force_peer"
    tags => "beats"

  }
  syslog {
    port => 12514
    tags => "syslog"
  }
}

filter {
  clone {
    clones => ['cloned_logs']
    add_tag => ["cloned_logs"]
    }

# If a windows update event that contains an updateTitle field (these sometimes contain KB numbers) then extract the KB
  if [updateTitle][winlog][event_data] {
    grok { match => {"[winlog][event_data][updateTitle]" => "(?<KB_number>KB[0-9]{5,})"} }
    }

# If there is a windows version number (pulled from winlogon.exe) enrich it with a friendly name
  if [winlog][event_data][Image] == "C:\Windows\System32\winlogon.exe" {
    translate {
      field => "[winlog][event_data][FileVersion]"
      destination => "OS_FriendlyName"
      dictionary_path => "/tmp/osmap.csv"
            }
   }



# Add IP Geo

  if [winlog][event_data][DestinationIp] {
    geoip {
      source => "[winlog][event_data][DestinationIp]"
      target => "[winlog][event_data][DestinationIpGeo]" }

    geoip {
      source => "[winlog][event_data][SourceIp]"
      target => "[winlog][event_data][SourceIpGeo]" }
}


  }



output {
        if "cloned_logs" not in [tags] {

  if "beats" in [tags] {
    elasticsearch {
      hosts => "https://elasticsearch:9200"
      index => "winlogbeat-%{+dd.MM.YYYY}"
      user => logstash_writer
      password => insertlogstashwriterpasswordhere
      ssl => true
      cacert => '/run/secrets/ca.crt'
      pipeline => "winlogbeat"
      }
  #end wlb
       }

  if "syslog" in [tags] {
    elasticsearch {
      hosts => "https://elasticsearch:9200"
      index => "winlogbeat-%{+dd.MM.YYYY}"
      user => logstash_writer
      password => insertlogstashwriterpasswordhere
      ssl => true
      cacert => '/run/secrets/ca.crt'
      pipeline => "syslog"
      }


#end type syslog
}


#end cloned logs if
  }

#end output
}
